var r = ProjectService {
  filenameToScriptInfo: Map {
    'c:/dev/test/tt/yays/client.js' => ScriptInfo {
      host: [Object],
      fileName: 'c:/dev/test/tt/yays/client.js',
      scriptKind: 1,
      hasMixedContent: false,
      path: 'c:/dev/test/tt/yays/client.js',
      containingProjects: [],
      isDynamic: false,
      textStorage: [TextStorage],
      sourceFileLike: undefined,
      sourceMapFilePath: undefined,
      declarationInfoPath: undefined,
      sourceInfos: undefined,
      documentPositionMapper: undefined
    },
    'c:/dev/fivem/fivem/code/bin/five/debug/citizen/scripting/v8/index.d.ts' => ScriptInfo {
      host: [Object],
      fileName: 'C:/dev/fivem/fivem/code/bin/five/debug/citizen/scripting/v8/index.d.ts',
      scriptKind: 3,
      hasMixedContent: false,
      path: 'c:/dev/fivem/fivem/code/bin/five/debug/citizen/scripting/v8/index.d.ts',
      containingProjects: [Array],
      isDynamic: false,
      textStorage: [TextStorage],
      fileWatcher: [Object],
      realpath: 'c:/dev/fivem/fivem/code/bin/five/debug/citizen/scripting/v8/index.d.ts',
      sourceFileLike: undefined,
      sourceMapFilePath: undefined,
      declarationInfoPath: undefined,
      sourceInfos: undefined,
      documentPositionMapper: undefined,
      cacheSourceFile: [Object]
    },
    'c:/dev/fivem/fivem/code/bin/five/debug/citizen/scripting/v8/natives_universal.d.ts' => ScriptInfo {
      host: [Object],
      fileName: 'C:/dev/fivem/fivem/code/bin/five/debug/citizen/scripting/v8/natives_universal.d.ts',
      scriptKind: 3,
      hasMixedContent: false,
      path: 'c:/dev/fivem/fivem/code/bin/five/debug/citizen/scripting/v8/natives_universal.d.ts',
      containingProjects: [Array],
      isDynamic: false,
      textStorage: [TextStorage],
      fileWatcher: [Object],
      realpath: 'c:/dev/fivem/fivem/code/bin/five/debug/citizen/scripting/v8/natives_universal.d.ts',
      sourceFileLike: undefined,
      sourceMapFilePath: undefined,
      declarationInfoPath: undefined,
      sourceInfos: undefined,
      documentPositionMapper: undefined,
      cacheSourceFile: [Object]
    },
    'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.d.ts' => ScriptInfo {
      host: [Object],
      fileName: 'C:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.d.ts',
      scriptKind: 3,
      hasMixedContent: false,
      path: 'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.d.ts',
      containingProjects: [Array],
      isDynamic: false,
      textStorage: [TextStorage],
      fileWatcher: [Object],
      realpath: 'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.d.ts',
      sourceFileLike: undefined,
      sourceMapFilePath: undefined,
      declarationInfoPath: undefined,
      sourceInfos: undefined,
      documentPositionMapper: undefined,
      cacheSourceFile: [Object]
    },
    'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.es5.d.ts' => ScriptInfo {
      host: [Object],
      fileName: 'C:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.es5.d.ts',
      scriptKind: 3,
      hasMixedContent: false,
      path: 'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.es5.d.ts',
      containingProjects: [Array],
      isDynamic: false,
      textStorage: [TextStorage],
      fileWatcher: [Object],
      realpath: 'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.es5.d.ts',
      sourceFileLike: undefined,
      sourceMapFilePath: undefined,
      declarationInfoPath: undefined,
      sourceInfos: undefined,
      documentPositionMapper: undefined,
      cacheSourceFile: [Object]
    },
    'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.dom.d.ts' => ScriptInfo {
      host: [Object],
      fileName: 'C:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.dom.d.ts',
      scriptKind: 3,
      hasMixedContent: false,
      path: 'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.dom.d.ts',
      containingProjects: [Array],
      isDynamic: false,
      textStorage: [TextStorage],
      fileWatcher: [Object],
      realpath: 'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.dom.d.ts',
      sourceFileLike: undefined,
      sourceMapFilePath: undefined,
      declarationInfoPath: undefined,
      sourceInfos: undefined,
      documentPositionMapper: undefined,
      cacheSourceFile: [Object]
    },
    'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.webworker.importscripts.d.ts' => ScriptInfo {
      host: [Object],
      fileName: 'C:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.webworker.importscripts.d.ts',
      scriptKind: 3,
      hasMixedContent: false,
      path: 'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.webworker.importscripts.d.ts',
      containingProjects: [Array],
      isDynamic: false,
      textStorage: [TextStorage],
      fileWatcher: [Object],
      realpath: 'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.webworker.importscripts.d.ts',
      sourceFileLike: undefined,
      sourceMapFilePath: undefined,
      declarationInfoPath: undefined,
      sourceInfos: undefined,
      documentPositionMapper: undefined,
      cacheSourceFile: [Object]
    },
    'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.scripthost.d.ts' => ScriptInfo {
      host: [Object],
      fileName: 'C:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.scripthost.d.ts',
      scriptKind: 3,
      hasMixedContent: false,
      path: 'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.scripthost.d.ts',
      containingProjects: [Array],
      isDynamic: false,
      textStorage: [TextStorage],
      fileWatcher: [Object],
      realpath: 'c:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/lib.scripthost.d.ts',
      sourceFileLike: undefined,
      sourceMapFilePath: undefined,
      declarationInfoPath: undefined,
      sourceInfos: undefined,
      documentPositionMapper: undefined,
      cacheSourceFile: [Object]
    }
  },
  scriptInfoInNodeModulesWatchers: Map {},
  filenameToScriptInfoVersion: Map {},
  allJsFilesForOpenFileTelemetry: Map {},
  externalProjectToConfiguredProjectMap: Map {},
  externalProjects: [],
  inferredProjects: [],
  configuredProjects: Map {
    'c:/dev/test/tt/yays/jsconfig.json' => ConfiguredProject {
      projectName: 'c:/dev/test/tt/yays/jsconfig.json',
      projectKind: 1,
      projectService: [Circular],
      documentRegistry: [Object],
      compilerOptions: [Object],
      compileOnSaveEnabled: false,
      watchOptions: undefined,
      rootFiles: [Array],
      rootFilesMap: [Map],
      plugins: [Array],
      cachedUnresolvedImportsPerFile: [Map],
      hasAddedorRemovedFiles: false,
      lastReportedVersion: 0,
      projectProgramVersion: 1,
      projectStateVersion: 1,
      isInitialLoadPending: [Function: returnFalse],
      dirty: false,
      typingFiles: [],
      importSuggestionsCache: [Object],
      globalCacheResolutionModuleName: [Function: nonRelativeModuleNameForTypingCache],
      directoryStructureHost: [Object],
      currentDirectory: 'c:/dev/test/tt/yays',
      getCanonicalFileName: [Function: toFileNameLowerCase],
      cancellationToken: [ThrottledCancellationToken],
      languageServiceEnabled: true,
      realpath: [Function: bound realpath],
      resolutionCache: [Object],
      languageService: [Object],
      openFileWatchTriggered: Map {},
      canConfigFileJsonReportNoInputFiles: true,
      externalProjectRefCount: 0,
      sendLoadingProjectFinish: false,
      canonicalConfigFilePath: 'c:/dev/test/tt/yays/jsconfig.json',
      configFileWatcher: [Object],
      projectOptions: true,
      configFileSpecs: [Object],
      projectErrors: [],
      projectReferences: undefined,
      potentialProjectReferences: undefined,
      lastCachedUnresolvedImportsList: [],
      directoriesWatchedForWildcards: Map {},
      typeAcquisition: [Object],
      pendingReload: 0,
      hasInvalidatedResolution: [Function],
      compilerHost: undefined,
      program: [Object],
      missingFilesMap: Map {},
      symlinks: undefined,
      externalFiles: [],
      autoImportProviderHost: undefined
    }
  },
  openFiles: Map { 'c:/dev/test/tt/yays/client.js' => 'c:/dev/test/tt/yays' },
  configFileForOpenFiles: Map {
    'c:/dev/test/tt/yays/client.js' => 'c:/dev/test/tt/yays/jsconfig.json'
  },
  openFilesWithNonRootedDiskPath: Map {},
  compilerOptionsForInferredProjectsPerProjectRoot: Map {},
  watchOptionsForInferredProjectsPerProjectRoot: Map {},
  projectToSizeMap: Map { 'c:/dev/test/tt/yays/jsconfig.json' => 0 },
  configFileExistenceInfoCache: Map {
    'c:/dev/test/tt/yays/tsconfig.json' => { exists: false, openFilesImpactedByConfigFile: [Map] },
    'c:/dev/test/tt/yays/jsconfig.json' => { exists: true, openFilesImpactedByConfigFile: [Map] }
  },
  safelist: {
    jquery: {
      match: /jquery(-(\.?\d+)+)?(\.intellisense)?(\.min)?\.js$/i,
      types: [Array]
    },
    WinJS: {
      match: /^(.*\/winjs-[.\d]+)\/js\/base\.js$/i,
      exclude: [Array],
      types: [Array]
    },
    Kendo: {
      match: /^(.*\/kendo(-ui)?)\/kendo\.all(\.min)?\.js$/i,
      exclude: [Array],
      types: [Array]
    },
    'Office Nuget': {
      match: /^(.*\/office\/1)\/excel-\d+\.debug\.js$/i,
      exclude: [Array],
      types: [Array]
    },
    References: { match: /^(.*\/_references\.js)$/i, exclude: [Array] },
    'Datatables.net': {
      match: /^.*\/(jquery\.)?dataTables(\.all)?(\.min)?\.js$/i,
      types: [Array]
    },
    Ace: { match: /^(.*)\/ace.js/i, exclude: [Array], types: [Array] }
  },
  legacySafelist: Map {
    'accounting' => 'accounting',
    'ace.js' => 'ace',
    'ag-grid' => 'ag-grid',
    'alertify' => 'alertify',
    'alt' => 'alt',
    'amcharts.js' => 'amcharts',
    'amplify' => 'amplifyjs',
    'angular' => 'angular',
    'angular-bootstrap-lightbox' => 'angular-bootstrap-lightbox',
    'angular-cookie' => 'angular-cookie',
    'angular-file-upload' => 'angular-file-upload',
    'angularfire' => 'angularfire',
    'angular-gettext' => 'angular-gettext',
    'angular-google-analytics' => 'angular-google-analytics',
    'angular-local-storage' => 'angular-local-storage',
    'angularLocalStorage' => 'angularlocalstorage',
    'angular-scroll' => 'angular-scroll',
    'angular-spinner' => 'angular-spinner',
    'angular-strap' => 'angular-strap',
    'angulartics' => 'angulartics',
    'angular-toastr' => 'angular-toastr',
    'angular-translate' => 'angular-translate',
    'angular-ui-router' => 'angular-ui-router',
    'angular-ui-tree' => 'angular-ui-tree',
    'angular-wizard' => 'angular-wizard',
    'async' => 'async',
    'atmosphere' => 'atmosphere',
    'aws-sdk' => 'aws-sdk',
    'aws-sdk-js' => 'aws-sdk',
    'axios' => 'axios',
    'backbone' => 'backbone',
    'backbone.layoutmanager' => 'backbone.layoutmanager',
    'backbone.paginator' => 'backbone.paginator',
    'backbone.radio' => 'backbone.radio',
    'backbone-associations' => 'backbone-associations',
    'backbone-relational' => 'backbone-relational',
    'backgrid' => 'backgrid',
    'Bacon' => 'baconjs',
    'benchmark' => 'benchmark',
    'blazy' => 'blazy',
    'bliss' => 'blissfuljs',
    'bluebird' => 'bluebird',
    'body-parser' => 'body-parser',
    'bootbox' => 'bootbox',
    'bootstrap' => 'bootstrap',
    'bootstrap-editable' => 'x-editable',
    'bootstrap-maxlength' => 'bootstrap-maxlength',
    'bootstrap-notify' => 'bootstrap-notify',
    'bootstrap-slider' => 'bootstrap-slider',
    'bootstrap-switch' => 'bootstrap-switch',
    'bowser' => 'bowser',
    'breeze' => 'breeze',
    'browserify' => 'browserify',
    'bson' => 'bson',
    'c3' => 'c3',
    'canvasjs' => 'canvasjs',
    'chai' => 'chai',
    'chalk' => 'chalk',
    'chance' => 'chance',
    'chartist' => 'chartist',
    'cheerio' => 'cheerio',
    'chokidar' => 'chokidar',
    'chosen.jquery' => 'chosen',
    'chroma' => 'chroma-js',
    'ckeditor.js' => 'ckeditor',
    'cli-color' => 'cli-color',
    'clipboard' => 'clipboard',
    'codemirror' => 'codemirror',
    'colors' => 'colors',
    'commander' => 'commander',
    'commonmark' => 'commonmark',
    'compression' => 'compression',
    'confidence' => 'confidence',
    'connect' => 'connect',
    'Control.FullScreen' => 'leaflet.fullscreen',
    'cookie' => 'cookie',
    'cookie-parser' => 'cookie-parser',
    'cookies' => 'cookies',
    'core' => 'core-js',
    'core-js' => 'core-js',
    'crossfilter' => 'crossfilter',
    'crossroads' => 'crossroads',
    'css' => 'css',
    'ct-ui-router-extras' => 'ui-router-extras',
    'd3' => 'd3',
    'dagre-d3' => 'dagre-d3',
    'dat.gui' => 'dat-gui',
    'debug' => 'debug',
    'deep-diff' => 'deep-diff',
    'Dexie' => 'dexie',
    'dialogs' => 'angular-dialog-service',
    'dojo.js' => 'dojo',
    'doT' => 'dot',
    'dragula' => 'dragula',
    'drop' => 'drop',
    'dropbox' => 'dropboxjs',
    'dropzone' => 'dropzone',
    'Dts Name' => 'dts name',
    'dust-core' => 'dustjs-linkedin',
    'easeljs' => 'easeljs',
    'ejs' => 'ejs',
    'ember' => 'ember',
    'envify' => 'envify',
    'epiceditor' => 'epiceditor',
    'es6-promise' => 'es6-promise',
    'ES6-Promise' => 'es6-promise',
    'es6-shim' => 'es6-shim',
    'expect' => 'expect',
    'express' => 'express',
    'express-session' => 'express-session',
    'ext-all.js' => 'extjs',
    'extend' => 'extend',
    'fabric' => 'fabricjs',
    'faker' => 'faker',
    'fastclick' => 'fastclick',
    'favico' => 'favico.js',
    'featherlight' => 'featherlight',
    'FileSaver' => 'filesaver',
    'fingerprint' => 'fingerprintjs',
    'fixed-data-table' => 'fixed-data-table',
    'flickity.pkgd' => 'flickity',
    'flight' => 'flight',
    'flow' => 'flowjs',
    'Flux' => 'flux',
    'formly' => 'angular-formly',
    'foundation' => 'foundation',
    'fpsmeter' => 'fpsmeter',
    'fuse' => 'fuse',
    'generator' => 'yeoman-generator',
    'gl-matrix' => 'gl-matrix',
    'globalize' => 'globalize',
    'graceful-fs' => 'graceful-fs',
    'gridstack' => 'gridstack',
    'gulp' => 'gulp',
    'gulp-rename' => 'gulp-rename',
    'gulp-uglify' => 'gulp-uglify',
    'gulp-util' => 'gulp-util',
    'hammer' => 'hammerjs',
    'handlebars' => 'handlebars',
    'hasher' => 'hasher',
    'he' => 'he',
    'hello.all' => 'hellojs',
    'highcharts.js' => 'highcharts',
    'highlight' => 'highlightjs',
    'history' => 'history',
    'History' => 'history',
    'hopscotch' => 'hopscotch',
    'hotkeys' => 'angular-hotkeys',
    'html2canvas' => 'html2canvas',
    'humane' => 'humane',
    'i18next' => 'i18next',
    'icheck' => 'icheck',
    'impress' => 'impress',
    'incremental-dom' => 'incremental-dom',
    'Inquirer' => 'inquirer',
    'insight' => 'insight',
    'interact' => 'interactjs',
    'intercom' => 'intercomjs',
    'intro' => 'intro.js',
    'ion.rangeSlider' => 'ion.rangeslider',
    'ionic' => 'ionic',
    'is' => 'is_js',
    'iscroll' => 'iscroll',
    'jade' => 'jade',
    'jasmine' => 'jasmine',
    'joint' => 'jointjs',
    'jquery' => 'jquery',
    'jquery.address' => 'jquery.address',
    'jquery.are-you-sure' => 'jquery.are-you-sure',
    'jquery.blockUI' => 'jquery.blockui',
    'jquery.bootstrap.wizard' => 'jquery.bootstrap.wizard',
    'jquery.bootstrap-touchspin' => 'bootstrap-touchspin',
    'jquery.color' => 'jquery.color',
    'jquery.colorbox' => 'jquery.colorbox',
    'jquery.contextMenu' => 'jquery.contextmenu',
    'jquery.cookie' => 'jquery.cookie',
    'jquery.customSelect' => 'jquery.customselect',
    'jquery.cycle.all' => 'jquery.cycle',
    'jquery.cycle2' => 'jquery.cycle2',
    'jquery.dataTables' => 'jquery.datatables',
    'jquery.dropotron' => 'jquery.dropotron',
    'jquery.fancybox.pack.js' => 'fancybox',
    'jquery.fancytree-all' => 'jquery.fancytree',
    'jquery.fileupload' => 'jquery.fileupload',
    'jquery.flot' => 'flot',
    'jquery.form' => 'jquery.form',
    'jquery.gridster' => 'jquery.gridster',
    'jquery.handsontable.full' => 'jquery-handsontable',
    'jquery.joyride' => 'jquery.joyride',
    'jquery.jqGrid' => 'jqgrid',
    'jquery.mmenu' => 'jquery.mmenu',
    'jquery.mockjax' => 'jquery-mockjax',
    'jquery.noty' => 'jquery.noty',
    'jquery.payment' => 'jquery.payment',
    'jquery.pjax' => 'jquery.pjax',
    'jquery.placeholder' => 'jquery.placeholder',
    'jquery.qrcode' => 'jquery.qrcode',
    'jquery.qtip' => 'qtip2',
    'jquery.raty' => 'raty',
    'jquery.scrollTo' => 'jquery.scrollto',
    'jquery.signalR' => 'signalr',
    'jquery.simplemodal' => 'jquery.simplemodal',
    'jquery.timeago' => 'jquery.timeago',
    'jquery.tinyscrollbar' => 'jquery.tinyscrollbar',
    'jquery.tipsy' => 'jquery.tipsy',
    'jquery.tooltipster' => 'tooltipster',
    'jquery.transit' => 'jquery.transit',
    'jquery.uniform' => 'jquery.uniform',
    'jquery.watch' => 'watch',
    'jquery-sortable' => 'jquery-sortable',
    'jquery-ui' => 'jqueryui',
    'js.cookie' => 'js-cookie',
    'js-data' => 'js-data',
    'js-data-angular' => 'js-data-angular',
    'js-data-http' => 'js-data-http',
    'jsdom' => 'jsdom',
    'jsnlog' => 'jsnlog',
    'json5' => 'json5',
    'jspdf' => 'jspdf',
    'jsrender' => 'jsrender',
    'js-signals' => 'js-signals',
    'jstorage' => 'jstorage',
    'jstree' => 'jstree',
    'js-yaml' => 'js-yaml',
    'jszip' => 'jszip',
    'katex' => 'katex',
    'kefir' => 'kefir',
    'keymaster' => 'keymaster',
    'keypress' => 'keypress',
    'kinetic' => 'kineticjs',
    'knockback' => 'knockback',
    'knockout' => 'knockout',
    'knockout.mapping' => 'knockout.mapping',
    'knockout.validation' => 'knockout.validation',
    'knockout-paging' => 'knockout-paging',
    'knockout-pre-rendered' => 'knockout-pre-rendered',
    'ladda' => 'ladda',
    'later' => 'later',
    'lazy' => 'lazy.js',
    'Leaflet.Editable' => 'leaflet-editable',
    'leaflet.js' => 'leaflet',
    'less' => 'less',
    'linq' => 'linq',
    'loading-bar' => 'angular-loading-bar',
    'lodash' => 'lodash',
    'log4javascript' => 'log4javascript',
    'loglevel' => 'loglevel',
    'lokijs' => 'lokijs',
    'lovefield' => 'lovefield',
    'lunr' => 'lunr',
    'lz-string' => 'lz-string',
    'mailcheck' => 'mailcheck',
    'maquette' => 'maquette',
    'marked' => 'marked',
    'math' => 'mathjs',
    'MathJax.js' => 'mathjax',
    'matter' => 'matter-js',
    'md5' => 'blueimp-md5',
    'md5.js' => 'crypto-js',
    'messenger' => 'messenger',
    'method-override' => 'method-override',
    'minimatch' => 'minimatch',
    'minimist' => 'minimist',
    'mithril' => 'mithril',
    'mobile-detect' => 'mobile-detect',
    'mocha' => 'mocha',
    'mock-ajax' => 'jasmine-ajax',
    'modernizr' => 'modernizr',
    'Modernizr' => 'modernizr',
    'moment' => 'moment',
    'moment-range' => 'moment-range',
    'moment-timezone' => 'moment-timezone',
    'mongoose' => 'mongoose',
    'morgan' => 'morgan',
    'mousetrap' => 'mousetrap',
    'ms' => 'ms',
    'mustache' => 'mustache',
    'native.history' => 'history',
    'nconf' => 'nconf',
    'ncp' => 'ncp',
    'nedb' => 'nedb',
    'ng-cordova' => 'ng-cordova',
    'ngDialog' => 'ng-dialog',
    'ng-flow-standalone' => 'ng-flow',
    'ng-grid' => 'ng-grid',
    'ng-i18next' => 'ng-i18next',
    'ng-table' => 'ng-table',
    'node_redis' => 'redis',
    'node-clone' => 'clone',
    'node-fs-extra' => 'fs-extra',
    'node-glob' => 'glob',
    'Nodemailer' => 'nodemailer',
    'node-mime' => 'mime',
    'node-mkdirp' => 'mkdirp',
    'node-mongodb-native' => 'mongodb',
    'node-mysql' => 'mysql',
    'node-open' => 'open',
    'node-optimist' => 'optimist',
    'node-progress' => 'progress',
    'node-semver' => 'semver',
    'node-tar' => 'tar',
    'node-uuid' => 'node-uuid',
    'node-xml2js' => 'xml2js',
    'nopt' => 'nopt',
    'notify' => 'notify',
    'nouislider' => 'nouislider',
    'npm' => 'npm',
    'nprogress' => 'nprogress',
    'numbro' => 'numbro',
    'numeral' => 'numeraljs',
    'nunjucks' => 'nunjucks',
    'nv.d3' => 'nvd3',
    'object-assign' => 'object-assign',
    'oboe-browser' => 'oboe',
    'office' => 'office-js',
    'offline' => 'offline-js',
    'onsenui' => 'onsenui',
    'OpenLayers.js' => 'openlayers',
    'openpgp' => 'openpgp',
    'p2' => 'p2',
    'packery.pkgd' => 'packery',
    'page' => 'page',
    'pako' => 'pako',
    'papaparse' => 'papaparse',
    'passport' => 'passport',
    'passport-local' => 'passport-local',
    'path' => 'pathjs',
    'pdfkit' => 'pdfkit',
    'peer' => 'peerjs',
    'peg' => 'pegjs',
    'photoswipe' => 'photoswipe',
    'picker.js' => 'pickadate',
    'pikaday' => 'pikaday',
    'pixi' => 'pixi.js',
    'platform' => 'platform',
    'Please' => 'pleasejs',
    'plottable' => 'plottable',
    'polymer' => 'polymer',
    'postal' => 'postal',
    'preloadjs' => 'preloadjs',
    'progress' => 'progress',
    'purify' => 'dompurify',
    'purl' => 'purl',
    'q' => 'q',
    'qs' => 'qs',
    'qunit' => 'qunit',
    'ractive' => 'ractive',
    'rangy-core' => 'rangy',
    'raphael' => 'raphael',
    'raven' => 'ravenjs',
    'react' => 'react',
    'react-bootstrap' => 'react-bootstrap',
    'react-intl' => 'react-intl',
    'react-redux' => 'react-redux',
    'ReactRouter' => 'react-router',
    'ready' => 'domready',
    'redux' => 'redux',
    'request' => 'request',
    'require' => 'require',
    'restangular' => 'restangular',
    'reveal' => 'reveal',
    'rickshaw' => 'rickshaw',
    'rimraf' => 'rimraf',
    'rivets' => 'rivets',
    'rx' => 'rx',
    'rx.angular' => 'rx-angular',
    'sammy' => 'sammyjs',
    'SAT' => 'sat',
    'sax-js' => 'sax',
    'screenfull' => 'screenfull',
    'seedrandom' => 'seedrandom',
    'select2' => 'select2',
    'selectize' => 'selectize',
    'serve-favicon' => 'serve-favicon',
    'serve-static' => 'serve-static',
    'shelljs' => 'shelljs',
    'should' => 'should',
    'showdown' => 'showdown',
    'sigma' => 'sigmajs',
    'signature_pad' => 'signature_pad',
    'sinon' => 'sinon',
    'sjcl' => 'sjcl',
    'slick' => 'slick-carousel',
    'smoothie' => 'smoothie',
    'socket.io' => 'socket.io',
    'socket.io-client' => 'socket.io-client',
    'sockjs' => 'sockjs-client',
    'sortable' => 'angular-ui-sortable',
    'soundjs' => 'soundjs',
    'source-map' => 'source-map',
    'spectrum' => 'spectrum',
    'spin' => 'spin',
    'sprintf' => 'sprintf',
    'stampit' => 'stampit',
    'state-machine' => 'state-machine',
    'Stats' => 'stats',
    'store' => 'storejs',
    'string' => 'string',
    'string_score' => 'string_score',
    'strophe' => 'strophe',
    'stylus' => 'stylus',
    'sugar' => 'sugar',
    'superagent' => 'superagent',
    'svg' => 'svgjs',
    'svg-injector' => 'svg-injector',
    'swfobject' => 'swfobject',
    'swig' => 'swig',
    'swipe' => 'swipe',
    'swiper' => 'swiper',
    'system.js' => 'systemjs',
    'tether' => 'tether',
    'three' => 'threejs',
    'through' => 'through',
    'through2' => 'through2',
    'timeline' => 'timelinejs',
    'tinycolor' => 'tinycolor',
    'tmhDynamicLocale' => 'angular-dynamic-locale',
    'toaster' => 'angularjs-toaster',
    'toastr' => 'toastr',
    'tracking' => 'tracking',
    'trunk8' => 'trunk8',
    'turf' => 'turf',
    'tweenjs' => 'tweenjs',
    'TweenMax' => 'gsap',
    'twig' => 'twig',
    'twix' => 'twix',
    'typeahead.bundle' => 'typeahead',
    'typescript' => 'typescript',
    'ui' => 'winjs',
    'ui-bootstrap-tpls' => 'angular-ui-bootstrap',
    'ui-grid' => 'ui-grid',
    'uikit' => 'uikit',
    'underscore' => 'underscore',
    'underscore.string' => 'underscore.string',
    'update-notifier' => 'update-notifier',
    'url' => 'jsurl',
    'UUID' => 'uuid',
    'validator' => 'validator',
    'vega' => 'vega',
    'vex' => 'vex-js',
    'video' => 'videojs',
    'vue' => 'vue',
    'vue-router' => 'vue-router',
    'webtorrent' => 'webtorrent',
    'when' => 'when',
    'winston' => 'winston',
    'wrench-js' => 'wrench',
    'ws' => 'ws',
    'xlsx' => 'xlsx',
    'xml2json' => 'x2js',
    'xmlbuilder-js' => 'xmlbuilder',
    'xregexp' => 'xregexp',
    'yargs' => 'yargs',
    'yosay' => 'yosay',
    'yui' => 'yui',
    'yui3' => 'yui',
    'zepto' => 'zepto',
    'ZeroClipboard' => 'zeroclipboard',
    'ZSchema-browser' => 'z-schema'
  },
  pendingProjectUpdates: Map {},
  pendingEnsureProjectForOpenFiles: true,
  seenProjects: Map { 'c:/dev/test/tt/yays/jsconfig.json' => true },
  host: {
    args: [
      '--useInferredProjectPerProjectRoot',
      '--enableTelemetry',
      '--cancellationPipeName',
      'C:\\Users\\alexr\\AppData\\Local\\Temp\\vscode-typescript\\b85af8041e4fc9aecd9c\\tscancellation-ec1b593bf4aaec7acc5a.tmp*',
      '--globalPlugins',
      'actual-fxdk-plugin,typescript-vscode-sh-plugin',
      '--pluginProbeLocations',
      'C:\\dev\\fivem\\fivem\\ext\\sdk\\resources\\sdk-root\\host\\personality-theia\\fxdk-app\\plugins\\fxdk-ts-plugin\\extension,C:\\dev\\fivem\\fivem\\ext\\sdk\\resources\\sdk-root\\host\\personality-theia\\fxdk-app\\plugins\\vscode-builtin-typescript-language-features\\extension',
      '--locale',
      'en-US',
      '--noGetErrOnBackgroundUpdate',
      '--validateDefaultNpmLocation'
    ],
    newLine: '\r\n',
    useCaseSensitiveFileNames: false,
    write: [Function],
    writeOutputIsTTY: [Function: writeOutputIsTTY],
    readFile: [Function: readFile],
    writeFile: [Function],
    watchFile: [Function],
    watchDirectory: [Function],
    resolvePath: [Function: resolvePath],
    fileExists: [Function: fileExists],
    directoryExists: [Function: directoryExists],
    createDirectory: [Function: createDirectory],
    getExecutingFilePath: [Function: getExecutingFilePath],
    getCurrentDirectory: [Function: getCurrentDirectory],
    getDirectories: [Function: getDirectories],
    getEnvironmentVariable: [Function: getEnvironmentVariable],
    readDirectory: [Function: readDirectory],
    getModifiedTime: [Function: getModifiedTime],
    setModifiedTime: [Function: setModifiedTime],
    deleteFile: [Function: deleteFile],
    createHash: [Function: createSHA256Hash],
    createSHA256Hash: [Function: createSHA256Hash],
    getMemoryUsage: [Function: getMemoryUsage],
    getFileSize: [Function: getFileSize],
    exit: [Function: exit],
    enableCPUProfiler: [Function: enableCPUProfiler],
    disableCPUProfiler: [Function: disableCPUProfiler],
    realpath: [Function: realpath],
    debugMode: false,
    tryEnableSourceMapsForHost: [Function: tryEnableSourceMapsForHost],
    setTimeout: [Function: setTimeout] {
      [Symbol(nodejs.util.promisify.custom)]: [Function]
    },
    clearTimeout: [Function: clearTimeout],
    clearScreen: [Function: clearScreen],
    setBlocking: [Function: setBlocking],
    bufferFrom: [Function: bufferFrom],
    base64decode: [Function: base64decode],
    base64encode: [Function: base64encode],
    require: [Function],
    setImmediate: [Function: setImmediate] {
      [Symbol(nodejs.util.promisify.custom)]: [Function]
    },
    clearImmediate: [Function: clearImmediate]
  },
  logger: Logger {
    logFilename: undefined,
    traceToConsole: undefined,
    level: undefined,
    fd: -1,
    seq: 0,
    inGroup: false,
    firstInGroup: true
  },
  cancellationToken: {
    isCancellationRequested: [Function: isCancellationRequested],
    setRequest: [Function: setRequest],
    resetRequest: [Function: resetRequest]
  },
  useSingleInferredProject: false,
  useInferredProjectPerProjectRoot: true,
  typingsInstaller: NodeTypingsInstaller {
    telemetryEnabled: true,
    logger: Logger {
      logFilename: undefined,
      traceToConsole: undefined,
      level: undefined,
      fd: -1,
      seq: 0,
      inGroup: false,
      firstInGroup: true
    },
    host: {
      args: [Array],
      newLine: '\r\n',
      useCaseSensitiveFileNames: false,
      write: [Function],
      writeOutputIsTTY: [Function: writeOutputIsTTY],
      readFile: [Function: readFile],
      writeFile: [Function],
      watchFile: [Function],
      watchDirectory: [Function],
      resolvePath: [Function: resolvePath],
      fileExists: [Function: fileExists],
      directoryExists: [Function: directoryExists],
      createDirectory: [Function: createDirectory],
      getExecutingFilePath: [Function: getExecutingFilePath],
      getCurrentDirectory: [Function: getCurrentDirectory],
      getDirectories: [Function: getDirectories],
      getEnvironmentVariable: [Function: getEnvironmentVariable],
      readDirectory: [Function: readDirectory],
      getModifiedTime: [Function: getModifiedTime],
      setModifiedTime: [Function: setModifiedTime],
      deleteFile: [Function: deleteFile],
      createHash: [Function: createSHA256Hash],
      createSHA256Hash: [Function: createSHA256Hash],
      getMemoryUsage: [Function: getMemoryUsage],
      getFileSize: [Function: getFileSize],
      exit: [Function: exit],
      enableCPUProfiler: [Function: enableCPUProfiler],
      disableCPUProfiler: [Function: disableCPUProfiler],
      realpath: [Function: realpath],
      debugMode: false,
      tryEnableSourceMapsForHost: [Function: tryEnableSourceMapsForHost],
      setTimeout: [Function],
      clearTimeout: [Function: clearTimeout],
      clearScreen: [Function: clearScreen],
      setBlocking: [Function: setBlocking],
      bufferFrom: [Function: bufferFrom],
      base64decode: [Function: base64decode],
      base64encode: [Function: base64encode],
      require: [Function],
      setImmediate: [Function],
      clearImmediate: [Function: clearImmediate]
    },
    globalTypingsCacheLocation: 'C:/Users/alexr/AppData/Local/Microsoft/TypeScript/4.0',
    typingSafeListLocation: undefined,
    typesMapLocation: 'C:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/typesMap.json',
    npmLocation: undefined,
    validateDefaultNpmLocation: true,
    event: [Function: event],
    activeRequestCount: 1,
    requestQueue: [],
    requestMap: Map {},
    requestedRegistry: false,
    projectService: [Circular],
    installer: ChildProcess {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      _closesNeeded: 2,
      _closesGot: 0,
      connected: true,
      signalCode: null,
      exitCode: null,
      killed: false,
      spawnfile: 'C:\\Program Files\\nodejs\\node.exe',
      _handle: [Process],
      spawnargs: [Array],
      pid: 24116,
      stdin: null,
      stdout: null,
      stderr: null,
      stdio: [Array],
      channel: [Pipe],
      _channel: [Getter/Setter],
      _handleQueue: null,
      _pendingMessage: null,
      send: [Function],
      _send: [Function],
      disconnect: [Function],
      _disconnect: [Function],
      [Symbol(kCapture)]: false
    }
  },
  throttleWaitMilliseconds: undefined,
  eventHandler: [Function],
  suppressDiagnosticEvents: false,
  globalPlugins: [ 'actual-fxdk-plugin', 'typescript-vscode-sh-plugin' ],
  pluginProbeLocations: [
    'C:\\dev\\fivem\\fivem\\ext\\sdk\\resources\\sdk-root\\host\\personality-theia\\fxdk-app\\plugins\\fxdk-ts-plugin\\extension',
    'C:\\dev\\fivem\\fivem\\ext\\sdk\\resources\\sdk-root\\host\\personality-theia\\fxdk-app\\plugins\\vscode-builtin-typescript-language-features\\extension'
  ],
  allowLocalPluginLoads: false,
  typesMapLocation: 'C:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/typesMap.json',
  serverMode: 0,
  syntaxOnly: false,
  realpathToScriptInfos: Map {
    add: [Function: multiMapAdd],
    remove: [Function: multiMapRemove]
  },
  currentDirectory: 'C:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app',
  toCanonicalFileName: [Function: toFileNameLowerCase],
  globalCacheLocationDirectoryPath: 'c:/users/alexr/appdata/local/microsoft/typescript/4.0/',
  throttledOperations: ThrottledOperations {
    host: {
      args: [Array],
      newLine: '\r\n',
      useCaseSensitiveFileNames: false,
      write: [Function],
      writeOutputIsTTY: [Function: writeOutputIsTTY],
      readFile: [Function: readFile],
      writeFile: [Function],
      watchFile: [Function],
      watchDirectory: [Function],
      resolvePath: [Function: resolvePath],
      fileExists: [Function: fileExists],
      directoryExists: [Function: directoryExists],
      createDirectory: [Function: createDirectory],
      getExecutingFilePath: [Function: getExecutingFilePath],
      getCurrentDirectory: [Function: getCurrentDirectory],
      getDirectories: [Function: getDirectories],
      getEnvironmentVariable: [Function: getEnvironmentVariable],
      readDirectory: [Function: readDirectory],
      getModifiedTime: [Function: getModifiedTime],
      setModifiedTime: [Function: setModifiedTime],
      deleteFile: [Function: deleteFile],
      createHash: [Function: createSHA256Hash],
      createSHA256Hash: [Function: createSHA256Hash],
      getMemoryUsage: [Function: getMemoryUsage],
      getFileSize: [Function: getFileSize],
      exit: [Function: exit],
      enableCPUProfiler: [Function: enableCPUProfiler],
      disableCPUProfiler: [Function: disableCPUProfiler],
      realpath: [Function: realpath],
      debugMode: false,
      tryEnableSourceMapsForHost: [Function: tryEnableSourceMapsForHost],
      setTimeout: [Function],
      clearTimeout: [Function: clearTimeout],
      clearScreen: [Function: clearScreen],
      setBlocking: [Function: setBlocking],
      bufferFrom: [Function: bufferFrom],
      base64decode: [Function: base64decode],
      base64encode: [Function: base64encode],
      require: [Function],
      setImmediate: [Function],
      clearImmediate: [Function: clearImmediate]
    },
    pendingTimeouts: Map {
      '*ensureProjectForOpenFiles*' => Timeout {
        _idleTimeout: 2500,
        _idlePrev: [Timeout],
        _idleNext: [TimersList],
        _idleStart: 254,
        _onTimeout: [Function],
        _timerArgs: [Array],
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: true,
        [Symbol(asyncId)]: 11,
        [Symbol(triggerId)]: 3
      }
    },
    logger: undefined
  },
  typingsCache: TypingsCache {
    installer: NodeTypingsInstaller {
      telemetryEnabled: true,
      logger: [Logger],
      host: [Object],
      globalTypingsCacheLocation: 'C:/Users/alexr/AppData/Local/Microsoft/TypeScript/4.0',
      typingSafeListLocation: undefined,
      typesMapLocation: 'C:/dev/fivem/fivem/ext/sdk/resources/sdk-root/host/personality-theia/fxdk-app/plugins/vscode-builtin-typescript-language-features/extension/deps/typescript/lib/typesMap.json',
      npmLocation: undefined,
      validateDefaultNpmLocation: true,
      event: [Function: event],
      activeRequestCount: 1,
      requestQueue: [],
      requestMap: Map {},
      requestedRegistry: false,
      projectService: [Circular],
      installer: [ChildProcess]
    },
    perProjectCache: Map { 'c:/dev/test/tt/yays/jsconfig.json' => [Object] }
  },
  hostConfiguration: {
    formatCodeOptions: {
      indentSize: 4,
      tabSize: 4,
      newLineCharacter: '\r\n',
      convertTabsToSpaces: true,
      indentStyle: 2,
      insertSpaceAfterConstructor: false,
      insertSpaceAfterCommaDelimiter: true,
      insertSpaceAfterSemicolonInForStatements: true,
      insertSpaceBeforeAndAfterBinaryOperators: true,
      insertSpaceAfterKeywordsInControlFlowStatements: true,
      insertSpaceAfterFunctionKeywordForAnonymousFunctions: false,
      insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,
      insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,
      insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces: true,
      insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,
      insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces: false,
      insertSpaceBeforeFunctionParenthesis: false,
      placeOpenBraceOnNewLineForFunctions: false,
      placeOpenBraceOnNewLineForControlBlocks: false,
      semicolons: 'ignore',
      trimTrailingWhitespace: true
    },
    preferences: {
      providePrefixAndSuffixTextForRename: true,
      allowRenameOfImportPath: true,
      includePackageJsonAutoImports: 'auto'
    },
    hostInfo: 'vscode',
    extraFileExtensions: [],
    watchOptions: undefined
  },
  documentRegistry: {
    acquireDocument: [Function: acquireDocument],
    acquireDocumentWithKey: [Function: acquireDocumentWithKey],
    updateDocument: [Function: updateDocument],
    updateDocumentWithKey: [Function: updateDocumentWithKey],
    releaseDocument: [Function: releaseDocument],
    releaseDocumentWithKey: [Function: releaseDocumentWithKey],
    getLanguageServiceRefCounts: [Function: getLanguageServiceRefCounts],
    reportStats: [Function: reportStats],
    getKeyForCompilationSettings: [Function: getKeyForCompilationSettings]
  },
  packageJsonCache: {
    addOrUpdate: [Function: addOrUpdate],
    forEach: [Function: bound forEach],
    get: [Function: bound get],
    delete: [Function: delete],
    getInDirectory: [Function: getInDirectory],
    directoryHasPackageJson: [Function: directoryHasPackageJson],
    searchDirectoryAndAncestors: [Function: searchDirectoryAndAncestors]
  },
  watchFactory: {
    watchFile: [Function: watchFile],
    watchFilePath: [Function: watchFilePath],
    watchDirectory: [Function: watchDirectory]
  },
  performanceEventHandler: [Function: bound ],
  compilerOptionsForInferredProjects: {
    module: 1,
    target: 3,
    jsx: 1,
    sourceMap: true,
    allowJs: true,
    allowSyntheticDefaultImports: true,
    allowNonTsExtensions: true,
    resolveJsonModule: true,
    noEmitForJsFiles: true
  },
  watchOptionsForInferredProjects: undefined
}